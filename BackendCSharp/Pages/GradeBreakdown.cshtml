@page
@model GradeBreakdownModel
@using BackendCSharp.Data
@{
    ViewData["Title"] = "Grade Breakdown";
}

@if (this.Model.Filters.Any())
{
    <label for="subject">Subject:</label>
    <select id="subject" class="form-control" asp-for="SelectedSubjectId">
        <option value="">All</option>
        @foreach (var subject in this.Model.Subjects)
        {
            <option value="@subject">@subject.Name</option>
        }
    </select>

    <label for="filter">Breakdown:</label>
    <select id="filter" class="form-control" asp-for="SelectedFilterId">
        <option value="">None</option>
        @foreach (var filter in this.Model.Filters)
        {
            <option value="@filter">@filter.Name</option>
        }
    </select>
}
else
{
    <div class="alert alert-warning" role="alert">
        <strong>Warning!</strong> No filters could be found.
    </div>
}

<div style="max-height: 500px;">
    <canvas id="myChart"></canvas>
</div>

@section Scripts
{
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
    const ctx = document.getElementById('myChart');

    new Chart(ctx, {
        type: 'doughnut',
        data: {
            labels: [@Html.Raw(Model.ReportData.Select(x => $"\"{x.Label}\"").Aggregate((x, y) => x + ", " + y))],
            datasets: [{
                label: '# of Grades',
                data: [@Model.ReportData.Select(x => x.Count.ToString()).Aggregate((x, y) => x + ", " + y)],
                borderWidth: 1
            }]
        }
    });
</script>

}
